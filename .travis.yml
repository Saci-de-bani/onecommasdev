sudo: required
dist: trusty
group: deprecated-2017Q3
os: linux
language: generic
cache:
  apt: true
  ccache: true
  directories:
  - depends/built
  - depends/sdk-sources
  - "$HOME/.ccache"
env:
  global:
  - MAKEJOBS=-j5
  - RUN_TESTS=false
  - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
  - CCACHE_SIZE=400M
  - CCACHE_TEMPDIR=/tmp/.ccache-temp
  - CCACHE_COMPRESS=1
  - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
  - SDK_URL=https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/
  - PYTHON_DEBUG=1
  - WINEDEBUG=fixme-all
  matrix:
  - HOST=arm-linux-gnueabihf PPA="ppa:bitcoin/bitcoin" PACKAGES="g++-arm-linux-gnueabihf"
    CHECK_DOC=1 GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
  - HOST=i686-pc-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="g++-multilib bc python3-zmq"
    RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat
    --enable-reduce-exports LDFLAGS=-static-libstdc++" PYZMQ=true
  - HOST=x86_64-unknown-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="bc python3-zmq"
    RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat
    --enable-reduce-exports" CPPFLAGS="-DDEBUG_LOCKORDER -DENABLE_DASH_DEBUG" PYZMQ=true
  - HOST=i686-w64-mingw32 DPKG_ADD_ARCH="i386" PPA="ppa:bitcoin/bitcoin" PACKAGES="python3
    nsis g++-mingw-w64-i686 wine1.7 bc" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-gui
    --enable-reduce-exports" MAKEJOBS="-j4" WINE=true
  - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH="i386" PPA="ppa:bitcoin/bitcoin" PACKAGES="python3
    nsis g++-mingw-w64-x86-64 wine1.7 bc" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-gui
    --enable-reduce-exports" MAKEJOBS="-j4" WINE=true
before_install:
- travis_retry sudo apt-get install python-dev
- travis_retry sudo add-apt-repository ppa:ubuntu-wine/ppa -y
- export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" |
  sed "s|::|:|g")
install:
- if [ "$PYZMQ" = "true" ]; then pip install pyzmq --user ; fi
- if [ -n "$PPA" ]; then travis_retry sudo add-apt-repository "$PPA" -y; fi
- if [ -n "$DPKG_ADD_ARCH" ]; then sudo dpkg --add-architecture "$DPKG_ADD_ARCH" ;
  fi
- if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
- if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends
  --no-upgrade -qq $PACKAGES; fi
before_script:
- unset CC; unset CXX
- unset DISPLAY
- mkdir -p depends/SDKs depends/sdk-sources
- if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.xz ]; then
  curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.xz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.xz;
  fi
- if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.xz ]; then
  tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.xz; fi
- make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
script:
- if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
- OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
- BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST
  --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
- depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
- test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
- "./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || (
  cat config.log && false)"
- make distdir PACKAGE=onecommas VERSION=$HOST
- cd onecommas-$HOST
- "./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG ||
  ( cat config.log && false)"
- make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL
  V=1 ; false )
- export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
- if [ "$RUN_TESTS" = "true" -a "$WINE" != "true" ]; then make $MAKEJOBS check VERBOSE=1;
  fi
- if [ "$RUN_TESTS" = "true" -a "$WINE" = "true" ]; then wine src/test/test_onecommas.exe;
  fi
- if [ "$RUN_TESTS" = "true" ]; then qa/pull-tester/rpc-tests.py --coverage; fi
after_script:
- if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then (echo "Upload goes here. Something like: scp
    -r $BASE_OUTDIR server" || echo "upload failed"); fi
- echo $TRAVIS_COMMIT_RANGE
- echo $TRAVIS_COMMIT_LOG
before_deploy:
- tar -cvzf $HOST.tar.gz $OUTDIR
- git tag "$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)"
deploy:
  provider: releases
  api_key:
    secure: zJNkb9mP2R/LQ7ITKYFcTJUOkdq4rK66wj34uXqzSKL3y/u775+yNNTIfVnnX1ItwJcMvOf6YOkhHqk7IvwBXWEpQDhiyE6UZPAD48UA8yH/G1toFVACmWyyZEugx9HkJLRJ+tZqro39SqTHEFwXvbr1O8pznXZzBQRKxny2s6PHiS6ZkbWIQTMfXijZftX8m3RP02a6Tya1W3wz1u0NgiqP09zxQwQFEAd522YVp8DXyiPLxd4WCwg6C6CkMOB5N/KxxwCQHhGwyjoUO753re5S5MsLAMcoZcghs7N+q1D2+1rr5zL8hy7rE5+x3vJBq5XNGZ9VNgXK2KXA+ZrHqjEJt32nnbpxDr1YTKNep92R5fziMg+G/nqR3a7Op3w0WEc5xkG/hmHAvQlZo0Nk0O3JcxOg0+9tjF3D6fDPRKZpxS8H87NDliALC4Ku/HYEqswb7KzCVHekkJcSSroQD24PUg28XCatPx08jqlmWY/LcRMWFbG9UvgGdd53h0qPNXtZgNQsuC5NQYqq+FFSCTggxg98BvmTAK6nHeWqfx6wFT2z0xftttC41uSvwI45ZLJqO6XXKcpB6IvDpiY2l6KCqRKXxhj/C71r1dToJWEGG/JwyH3iJ+pQIGY/a7/bD4GiPsPI2rv1BKelW0Xz16LNoq8XW7NqIPY5by47UOg=
  file: "$HOST.tar.gz"
  on:
    repo: Saci-de-bani/onecommasdev
